/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package pl.edu.agh.student.jfik.gui;

import java.awt.Color;
import java.awt.Graphics;


import pl.edu.agh.student.jfik.math.Triangle;
import pl.edu.agh.student.jfik.math.Vector2;

/**
 *
 * @author Bartek
 */
public class Canvas extends javax.swing.JPanel {

	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;
	double xOffset = 0;
	double yOffset = 0;
	
    /**
     * Creates new form Canvas
     */
    public Canvas() {
        initComponents();
    }

    public void recalculateOffset() {
    	xOffset = (double)this.getWidth() / 2.0;
    	yOffset = (double)this.getHeight() / 2.0;
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setBackground(new java.awt.Color(255, 255, 255));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 544, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 349, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents
    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables

    public void drawLine(Vector2 p1, Vector2 p2, Color color) {
    	Graphics g = this.getGraphics();
    	g.setColor(color);
    	
    	g.drawLine((int)(Math.round(xOffset + p1.getX())),	(int)(Math.round(yOffset - p1.getY())),
    			(int)(Math.round(xOffset + p2.getX())), (int)(Math.round(yOffset - p2.getY())));
    	
    }
    
    public void drawPoint(Vector2 p, Color color) {
    	Graphics g = this.getGraphics();
    	g.setColor(color);
    	
    }
    
    public void dravTriangle(Triangle triangle, Color color) {
    	Vector2[] vertexes = triangle.vertexes();
    	Vector2 p1, p2;
    	
    	for(int i = 0; i < vertexes.length; i++) {
    		p1 = vertexes[i];
    		p2 = vertexes[(i+1)%3];
    		drawLine(p1, p2, color);
    	}
    }
    
    public void clear() {
    	Graphics g = this.getGraphics();
    	
    	g.setColor(Color.WHITE);
    }
}
